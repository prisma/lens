import React, { useRef, forwardRef } from "react"
import cn from "classnames"
import { Size, sizeToNumeric } from "../../utils/sizeToNumeric"

export type IconProps = {
  /** A React ref to attach to the rendered Button */
  ref?: React.ForwardedRef<SVGSVGElement>
  /** An HTML ID attribute that will be attached to the the rendered component. Useful for targeting it from tests */
  id?: string
  /** Name of the icon to render. Reference: https://feathericons.com */
  name: string
  /** Size of the icon */
  size?: Size
  /** Additional classes that will be spread over the icon. Avoid changing the Icon visually. */
  className?: string
}

export const Icon = forwardRef<SVGSVGElement, IconProps>(
  ({ id, name, size = "md", className }: IconProps, forwardedRef) => {
    const _iconRef = useRef<SVGSVGElement>(null)
    const iconRef = forwardedRef || _iconRef

    const width = sizeToNumeric(size)
    const commonProps = {
      id,
      "lens-role": "icon",
      ref: iconRef,
      width,
      height: width,
      className: cn(
        "flex-grow-0 flex-shrink-0",
        "text-gray-400 dark:text-gray-300",
        className
      ),
    }

    // Exceptions to FeatherIcons
    if (name === "prisma") {
      return (
        <svg {...commonProps} viewBox="0 0 32 32" fill="currentColor">
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M3.2342 20.2629C2.91743 20.7809 2.92234 21.4344 3.24684 21.9475L9.12024 31.2353C9.50143 31.8381 10.2362 32.113 10.9181 31.9079L27.8674 26.8107C28.7923 26.5325 29.2577 25.4981 28.8534 24.619L17.9576 0.925701C17.4263 -0.229765 15.8244 -0.324611 15.1611 0.760114L3.2342 20.2629ZM17.711 6.33539C17.4791 5.79843 16.6939 5.88114 16.5788 6.45464L12.3785 27.3844C12.29 27.8257 12.7028 28.2026 13.1338 28.0738L24.8596 24.5709C25.2019 24.4687 25.3782 24.0904 25.2365 23.7622L17.711 6.33539Z"
          />
        </svg>
      )
    }

    if (name === "chevron-down") {
      return (
        <svg {...commonProps} viewBox="0 0 9 6" fill="currentColor">
          <path d="M4.12835 5.08706L0.751034 1.33448C0.461449 1.01272 0.689796 0.5 1.12268 0.5H7.87732C8.3102 0.5 8.53855 1.01272 8.24897 1.33448L4.87165 5.08706C4.67303 5.30775 4.32697 5.30775 4.12835 5.08706Z" />
        </svg>
      )
    }

    if (name === "i") {
      return (
        <svg {...commonProps} viewBox="0 0 32 32" fill="currentColor">
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M16.2637 31.979C14.4612 31.9674 13.0094 30.4969 13.021 28.6944L13.1049 15.6398C13.1165 13.8373 14.5871 12.3855 16.3895 12.3971C18.192 12.4087 19.6438 13.8793 19.6322 15.6818L19.5483 28.7364C19.5367 30.5388 18.0661 31.9906 16.2637 31.979Z"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M20.021 3.30582C20.0094 5.10828 18.5388 6.56007 16.7364 6.54849L16.7037 6.54828C14.9013 6.53669 13.4495 5.06611 13.461 3.26365C13.4726 1.46119 14.9432 0.0093926 16.7457 0.0209788L16.7783 0.0211886C18.5808 0.0327748 20.0326 1.50335 20.021 3.30582Z"
          />
        </svg>
      )
    }

    if (name === "heroku") {
      return (
        <svg {...commonProps} viewBox="0 0 15 17">
          <path
            d="M13.5 0H1.5C0.671667 0 0 0.6851 0 1.53V15.47C0 16.3149 0.671667 17 1.5 17H13.5C14.3283 17 15 16.3149 15 15.47V1.53C15 0.6851 14.3283 0 13.5 0ZM3.75 14.45V11.05L5.625 12.75L3.75 14.45ZM9.58333 14.45V9.37338C9.57521 8.97664 9.38792 8.5 8.54167 8.5C6.84708 8.5 4.94625 9.36934 4.92729 9.37805L3.75 9.92205V2.55H5.41667V7.37609C6.24875 7.09984 7.41187 6.8 8.54167 6.8C9.57187 6.8 10.1885 7.2131 10.5244 7.55969C11.2412 8.29919 11.251 9.2412 11.25 9.35V14.45H9.58333ZM10 5.3125H8.33333C8.98833 4.43594 9.39958 3.51348 9.58333 2.55H11.25C11.1375 3.5156 10.7537 4.44125 10 5.3125Z"
            fill="#430098" // Deliberately leaving color in so it cannot be changed externally
          />
        </svg>
      )
    }

    if (name === "railway") {
      return (
        <svg {...commonProps} viewBox="0 0 60 60">
          <circle cx="30" cy="30" r="30" fill="white" />
          <path
            d="M0.343192 25.6917C0.200411 26.693 0.107508 27.7007 0.0648155 28.7113H45.5895C45.4305 28.4005 45.2169 28.1203 45.0015 27.8461C37.2188 17.7853 33.0322 18.6577 27.0434 18.4021C25.0467 18.3199 23.6926 18.2869 15.7449 18.2869C11.4911 18.2869 6.86661 18.2977 2.36327 18.3097C2.80545 17.2622 3.32319 16.2584 3.87816 15.2733C2.14727 18.3367 0.959341 21.7355 0.395374 25.3461L0.929937 22.708C0.934137 22.6894 0.940765 22.6702 0.944365 22.6516H24.2728V25.6917H0.343192ZM45.9483 31.7543H0.0882149C0.136212 32.5655 0.211808 33.3658 0.321001 34.1553H42.6611C44.5485 34.1553 45.6051 33.0838 45.9483 31.7543ZM2.73045 42.4487C2.28328 41.4704 1.88675 40.4697 1.5425 39.4506C5.50706 51.3839 16.7384 60 30.0006 60C42.1229 60 52.5389 52.7962 57.2702 42.4487H2.73045ZM0.0480074 29.0443C0.037208 29.3628 0 29.6772 0 29.9976C0 30.3204 0.037808 30.633 0.0480074 30.9515V29.0443Z"
            fill="black" // Deliberately leaving color in so it cannot be changed externally
          />
          <path
            d="M30 0C18.7915 0 9.03787 6.15863 3.88718 15.2625C7.91234 15.2541 15.7515 15.2493 15.7515 15.2493H15.7533V15.2463C25.0191 15.2463 25.3635 15.2877 27.1736 15.3633L28.2943 15.4047C32.1983 15.5349 36.9968 15.9542 40.7724 18.8125C42.8219 20.3628 45.7809 23.7844 47.5448 26.222C49.1755 28.4767 49.6446 31.0685 48.5359 33.5518C47.5154 35.8341 45.3195 37.1954 42.6605 37.1954H0.929949L0.399597 34.6749C0.655182 36.299 1.02174 37.8811 1.52691 39.4062H58.4719C59.4806 36.3718 59.9964 33.1953 59.9994 29.9976C60 13.432 46.5686 0 30 0V0Z"
            fill="black" // Deliberately leaving color in so it cannot be changed externally
          />
        </svg>
      )
    }

    if (name === "planetscale") {
      return (
        <svg {...commonProps} viewBox="0 0 44 34">
          <path
            d="M42.5912 0.0200195L34.8262 7.88594C31.8541 3.26024 26.7213 0.209964 20.9086 0.209964C16.4778 0.209964 12.3101 1.9865 9.19538 5.22672C6.0916 8.4446 4.38069 12.7128 4.38069 17.2491C4.38069 18.4111 4.49036 19.5507 4.72068 20.6569C4.15037 21.2491 3.15234 22.3329 2.24204 23.5731C0.256937 26.2994 -0.18176 28.344 0.936917 29.6401C1.10143 29.8413 1.6169 30.3776 2.61493 30.4669C2.70267 30.4781 2.77944 30.4781 2.86718 30.4781C4.46843 30.4781 6.45353 29.2826 8.74572 26.9139L26.9626 8.51164L25.6904 7.20438L8.25219 24.8245C6.88126 22.5116 6.17934 19.9753 6.17934 17.2602C6.17934 13.2044 7.70381 9.39432 10.4786 6.52281C13.2533 3.64013 16.9603 2.05354 20.9086 2.05354C26.2278 2.05354 30.8999 4.91387 33.5102 9.20438L19.6473 23.2491C18.748 24.1653 17.6184 25.2938 16.7958 26.5563C15.3042 28.8245 15.6333 30.5116 15.9623 31.3049L15.9733 31.3273C16.3571 32.21 17.0152 32.9139 17.8816 33.3832C18.8686 33.9083 19.8667 33.9865 20.8757 34.02H20.8976H20.9196C25.3723 34.0088 29.5509 32.2658 32.6766 29.0926C35.8243 25.9195 37.5571 21.6737 37.5571 17.1597C37.5571 14.4111 36.9101 11.8189 35.7694 9.5284L43.8634 1.32728L42.5912 0.0200195ZM2.86718 28.6457H2.85622C2.54913 28.6457 2.39558 28.534 2.35171 28.5005L2.30784 28.4446C1.95689 28.0424 2.13237 26.8468 3.68974 24.6904C4.21618 23.953 4.80842 23.2714 5.29098 22.7239C5.70774 23.9083 6.25612 25.048 6.9361 26.1429C4.72068 28.2994 3.44846 28.6457 2.86718 28.6457ZM31.4044 27.7966C28.6187 30.6122 24.8898 32.1764 20.9305 32.1876C19.9325 32.1541 19.3183 32.0759 18.7261 31.7519C18.2216 31.4837 17.8596 31.0926 17.6293 30.5899C17.1906 29.4725 17.9584 28.1094 18.3093 27.5731C19.0332 26.4669 20.086 25.4055 20.9305 24.5563L34.4205 10.9027C35.2759 12.8133 35.7585 14.9362 35.7585 17.1709C35.7365 21.1932 34.2011 24.9697 31.4044 27.7966Z"
            fill="#1A1B21" // Deliberately leaving color in so it cannot be changed externally
          ></path>
        </svg>
      )
    }

    return (
      <svg
        {...commonProps}
        fill="none"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      >
        <use xlinkHref={`/feather-icons.svg#${name}`} />
      </svg>
    )
  }
)
